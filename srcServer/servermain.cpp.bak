/* 
 * File:   main.c
 * Author: erupter
 *
 * Created on December 14, 2012, 3:18 PM
 */




//
// Hello World server in C++
// Binds REP socket to tcp://*:5555
// Expects "Hello" from client, replies with "World"
//
#include <zmq.hpp>
//#include <zre.h>
#include <string>
#include <iostream>
#include <unistd.h>
#include <zhelpers.hpp>


//
// Pubsub envelope publisher
// Note that the zhelpers.h file also provides s_sendmore
//
// Olivier Chamoux <olivier.chamoux@fr.thalesgroup.com>


int main () {
    // Prepare our context and publisher
    zmq::context_t context(1);
    zmq::socket_t publisher(context, ZMQ_PUB);
    publisher.bind("epgm://192.168.127.253;239.192.1.1:5555");
    unsigned short int counter = 0;
    char count[3];
    
    while (1) {
        std::cout <<"Cycle "<<counter<<std::endl;
        sprintf(count,"%03d",counter);
        // Write two messages, each with an envelope and content
        s_sendmore (publisher, "A");
        s_sendmore (publisher, "We don't want to see this");
        s_send     (publisher, count);
        s_sendmore (publisher, "B");
        s_sendmore (publisher, "We would like to see this");
        s_send     (publisher, count);
        counter++;
        usleep (1500000);
    }
    return 0;
}


/*
int main () {
    // Prepare our context and socket
    zmq::context_t context (1);
    zmq::socket_t socket (context, ZMQ_ROUTER);
    socket.bind ("tcp://*:5555");

    while (true) {
        zmq::message_t request;

        // Wait for next request from client
        socket.recv (&request);
        std::cout << "Received Hello" << std::endl;

        // Do some 'work'
        sleep (1);

        // Send reply back to client
        zmq::message_t reply (5);
        memcpy ((void *) reply.data (), "World", 5);
        socket.send (reply);
    }


    return (EXIT_SUCCESS);
}

*/